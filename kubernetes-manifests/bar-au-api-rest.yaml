apiVersion: apps/v1
kind: Deployment
metadata:
  name: bar-au-api-rest
  labels:
    service: bar-au-api-rest
spec:
  replicas: 2
  selector:
    matchLabels:
      app: bar-au-api-rest
  template:
    metadata:
      labels:
        app: bar-au-api-rest
    spec:
      initContainers:
        - name: wait-postgres
          image: lqhl/wait-for-it
          env:
            - name: WAITFORIT_TIMEOUT
              value: '30'
            - name: WAITFORIT_HOST
              value: $(BAR_AU_DB_SERVICE_HOST)
            - name: WAITFORIT_PORT
              value: $(BAR_AU_DB_SERVICE_PORT)
      containers:
        - name: bar-au-api-rest
          image: bar-au-api-rest
          ports:
            - name: bar-au-api-rest
              containerPort: 3000
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                    name: bar-au-db-config
                    key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                    name: bar-au-db-config
                    key: password
            - name: POSTGRES_DB
              valueFrom: 
                secretKeyRef:
                  name: bar-au-db-config
                  key: db
            - name: PGRST_DB_URI
              value: postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(BAR_AU_DB_SERVICE_HOST):$(BAR_AU_DB_SERVICE_PORT)/$(POSTGRES_DB)?sslmode=disable
            - name: PGRST_DB_SCHEMA
              value: public
            - name: PGRST_DB_ANON_ROLE
              value: anon
          livenessProbe:
            httpGet:
              path: /
              port: bar-au-api-rest
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /
              port: bar-au-api-rest
              scheme: HTTP
--- 
apiVersion: v1
kind: Service
metadata:
  name: bar-au-api-rest
spec:
  type: ClusterIP
  ports:
  - port: 3000
    protocol: TCP
    targetPort: bar-au-api-rest
  selector:
    app: bar-au-api-rest
